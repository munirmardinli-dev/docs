name: Production CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NPM_VERSION: '22'
  REGISTRY_URL: 'https://npm.pkg.github.com'
  REPO_NAME: ${{ github.event.repository.name }}

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write
  actions: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      node_modules_cache: ${{ steps.set-cache-output.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: npm
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Set cache output
        id: set-cache-output
        run: echo "cache-hit=$(ls node_modules | wc -l | tr -d ' ')" >> $GITHUB_OUTPUT
  

  build:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Create default page
        run: |
          mkdir -p src/app
          echo "---
          title: 'test'
          description: "Beschreibung der Seite"
          author: "Munir Mardinli"
          date: "2025-08-27"
          ---
          # Test" > src/app/page.mdx
      - name: Build production
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_UI_URL: http://localhost:3000
          NEXT_PUBLIC_HOMELAB_URL: http://localhost:3000
