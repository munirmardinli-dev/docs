name: Docs CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

env:
  NPM_VERSION: '22'
  REGISTRY_URL: 'https://npm.pkg.github.com'
  REPO_NAME: ${{ github.event.repository.name }}
  NEXT_PUBLIC_UI_URL: http://localhost:3000
  NEXT_PUBLIC_HEADER_TITEL: Docs Management
  NEXT_PUBLIC_GIT_REPO_URL: https://github.com/munirmardinli/docs

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: List initial directory contents
        run: ls -la
      
      - name: Clone main docs repository
        run: |
          git clone https://github.com/munirmardinli-dev/docs.git docs-app
          ls -la docs-app/
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: npm
          cache-dependency-path: docs-app/package-lock.json
      
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: docs-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('docs-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
        working-directory: docs-app
        
      - name: Production environment variables
        run: |
          echo "NODE_ENV=production" > .env.production
          echo "NEXT_PUBLIC_UI_URL=$NEXT_PUBLIC_UI_URL" >> .env.production
          echo "NEXT_PUBLIC_HEADER_TITEL=$NEXT_PUBLIC_HEADER_TITEL" >> .env.production
          echo "NEXT_PUBLIC_GIT_REPO_URL=$NEXT_PUBLIC_GIT_REPO_URL" >> .env.production
          cat .env.production
        working-directory: docs-app
        env:
          NEXT_PUBLIC_UI_URL: ${{ env.NEXT_PUBLIC_UI_URL }}
          NEXT_PUBLIC_HEADER_TITEL: ${{ env.NEXT_PUBLIC_HEADER_TITEL }}
          NEXT_PUBLIC_GIT_REPO_URL: ${{ env.NEXT_PUBLIC_GIT_REPO_URL }}

      - name: Copy MDX files from docs folder to Next.js app
        run: |
          cp -r docs/* docs-app/src/app/ || true
          ls -la docs-app/src/app/
    
      - name: Delete .env.local
        working-directory: docs-app
        run: |
          ls -la
          rm .env.local
          ls -la

      - name: Copy next.config.ts from current repository
        working-directory: docs-app
        run: |
          ls -la
          cp next.config.ts next.config.ts
          echo "âœ… next.config.ts erfolgreich kopiert"
          ls -la | grep next.config.ts
          ls -la

      - name: Run build
        run: |
          ls -la
          npm run build
          ls -la
        working-directory: docs-app
        env:
          NODE_ENV: production
          NEXT_PUBLIC_UI_URL: ${{ env.NEXT_PUBLIC_UI_URL }}
          NEXT_PUBLIC_HEADER_TITEL: ${{ env.NEXT_PUBLIC_HEADER_TITEL }}
          NEXT_PUBLIC_GIT_REPO_URL: ${{ env.NEXT_PUBLIC_GIT_REPO_URL }}
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs-app/out'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
