name: Setup Documentation Structure

env:
  NPM_VERSION: '22'

on:
  workflow_dispatch:
    inputs:
      mdx_src:
        description: 'MDX Quellordner'
        required: true
        default: 'src/app/'
      docs_folder:
        description: 'Ordner fÃ¼r die Dokumentation (z.B. docs, documentation, guide)'
        required: true
        default: 'docs'
      project_name:
        description: 'Name des Projekts'
        required: true
        default: 'Dokumentation'
      project_description:
        description: 'Beschreibung des Projekts'
        required: true
        default: 'Project documentation'
      author_name:
        description: 'Name des Autors'
        required: true
        default: 'Munir Mardinli'
      author_email:
        description: 'Email des Autors'
        required: true
        default: 'Munir@Mardinli.de'
      github_username:
        description: 'GitHub Benutzername'
        required: true
        default: 'munirmardinli'

jobs:
  setup-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NPM_VERSION }}
          cache: 'npm'

      - name: Create docs folder
        run: mkdir -p ${{ github.event.inputs.docs_folder }}

      - name: Copy and customize package.json
        run: |
          cp package.json ${{ github.event.inputs.docs_folder }}/package.json
          cd ${{ github.event.inputs.docs_folder }}
          sed -i "s/@munirmardinli-dev\/docs/@${{ github.event.inputs.github_username }}\/${{ github.event.inputs.project_name }}/g" package.json
          sed -i "s/Documentation tools and utilities for Munir Mardinli's projects/${{ github.event.inputs.project_description }}/g" package.json
          sed -i "s/munirmardinli-dev/${{ github.event.inputs.github_username }}/g" package.json
          sed -i "s/Munir Mardinli/${{ github.event.inputs.author_name }}/g" package.json
          sed -i "s/Munir@Mardinli.de/${{ github.event.inputs.author_email }}/g" package.json

      - name: Copy config files
        run: |
          cp next.config.ts ${{ github.event.inputs.docs_folder }}/
          cp tailwind.config.ts ${{ github.event.inputs.docs_folder }}/
          cp tsconfig.json ${{ github.event.inputs.docs_folder }}/
          cp postcss.config.ts ${{ github.event.inputs.docs_folder }}/
          cp mdx-components.tsx ${{ github.event.inputs.docs_folder }}/

      - name: Create directory structure
        run: |
          mkdir -p ${{ github.event.inputs.docs_folder }}/src/app
          mkdir -p ${{ github.event.inputs.docs_folder }}/src/components
          mkdir -p ${{ github.event.inputs.docs_folder }}/src/lib
          mkdir -p ${{ github.event.inputs.docs_folder }}/public/data
          mkdir -p ${{ github.event.inputs.docs_folder }}/public/font

      - name: Copy and customize src files
        run: |
          cp src/app/layout.tsx ${{ github.event.inputs.docs_folder }}/src/app/layout.tsx
          cd ${{ github.event.inputs.docs_folder }}
          sed -i "s/docs/${{ github.event.inputs.project_name }}/g" src/app/layout.tsx
          sed -i "s/Documentation tools and utilities for Munir Mardinli's projects/${{ github.event.inputs.project_description }}/g" src/app/layout.tsx

      - name: Copy lib files
        run: |
          cp ../src/lib/utils.ts src/lib/utils.ts
          cp ../src/lib/theme.tsx src/lib/theme.tsx

      - name: Copy MDX files from source project
        run: |
          if [ -d "${{ github.event.inputs.mdx_src }}" ]; then
            echo "Copying MDX files from ${{ github.event.inputs.mdx_src }}"
            find ${{ github.event.inputs.mdx_src }} -name "*.mdx" -type f | while read file; do
              # Get the relative path from mdx_src
              rel_path=$(echo "$file" | sed "s|${{ github.event.inputs.mdx_src }}||")
              target_dir="${{ github.event.inputs.docs_folder }}/src/app$(dirname "$rel_path")"
              mkdir -p "$target_dir"
              cp "$file" "${{ github.event.inputs.docs_folder }}/src/app$rel_path"
              echo "Copied: $file -> ${{ github.event.inputs.docs_folder }}/src/app$rel_path"
            done
          else
            echo "Warning: MDX source directory ${{ github.event.inputs.mdx_src }} not found"
          fi

      - name: Copy and customize public files
        run: |
          # Copy db.json and customize
          cp public/data/db.json ${{ github.event.inputs.docs_folder }}/public/data/db.json
          cd ${{ github.event.inputs.docs_folder }}
          sed -i "s/docs/${{ github.event.inputs.project_name }}/g" public/data/db.json
          sed -i "s/Documentation tools and utilities for Munir Mardinli's projects/${{ github.event.inputs.project_description }}/g" public/data/db.json
          sed -i "s/Munir Mardinli/${{ github.event.inputs.author_name }}/g" public/data/db.json

      - name: Copy and customize root files
        run: |
          # Copy README.md and customize
          cp README.md ${{ github.event.inputs.docs_folder }}/README.md
          cd ${{ github.event.inputs.docs_folder }}
          sed -i "s/@munirmardinli-dev\/docs/@${{ github.event.inputs.github_username }}\/${{ github.event.inputs.project_name }}/g" README.md
          sed -i "s/Documentation tools and utilities for Munir Mardinli's projects/${{ github.event.inputs.project_description }}/g" README.md
          sed -i "s/munirmardinli-dev/${{ github.event.inputs.github_username }}/g" README.md
          sed -i "s/Munir Mardinli/${{ github.event.inputs.author_name }}/g" README.md
          sed -i "s/Munir@Mardinli.de/${{ github.event.inputs.author_email }}/g" README.md

          # Copy LICENSE and customize
          cp ../LICENSE LICENSE
          sed -i "s/Munir Mardinli/${{ github.event.inputs.author_name }}/g" LICENSE

          # Copy .gitignore
          cp ../.gitignore .gitignore
          ls -la

      - name: Install dependencies
        run: |
          cd ${{ github.event.inputs.docs_folder }}
          npm install

      - name: Test build
        run: |
          cd ${{ github.event.inputs.docs_folder }}
          npm run build
        env:
          NEXT_PUBLIC_UI_URL: ${{ github.event.inputs.docs_folder }}

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "feat: Setup documentation structure in ${{ github.event.inputs.docs_folder }} with Nextra and Next.js"
          git push
